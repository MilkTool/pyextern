/* This file is generated, do not edit! */
package tensorflow.python.data.experimental.ops.prefetching_ops;
@:pythonImport("tensorflow.python.data.experimental.ops.prefetching_ops") extern class Prefetching_ops_Module {
	static public var __builtins__ : Dynamic;
	static public var __cached__ : Dynamic;
	static public var __doc__ : Dynamic;
	static public var __file__ : Dynamic;
	static public var __loader__ : Dynamic;
	static public var __name__ : Dynamic;
	static public var __package__ : Dynamic;
	static public var __spec__ : Dynamic;
	static public var absolute_import : Dynamic;
	/**
		A transformation that copies dataset elements to the given `target_device`.
		
		Args:
		  target_device: The name of a device to which elements will be copied.
		  source_device: The original device on which `input_dataset` will be placed.
		
		Returns:
		  A `Dataset` transformation function, which can be passed to
		  `tf.data.Dataset.apply`.
	**/
	static public function copy_to_device(target_device:Dynamic, ?source_device:Dynamic):Dynamic;
	static public var division : Dynamic;
	/**
		Creates a FunctionBufferingResource.
		
		A FunctionBufferingResource fills up a buffer by calling a function `f` on
		`target_device`. `f` should take in only a single string argument as input.
		
		Args:
		  string_arg: The single string argument to the function.
		  target_device: The device to run `f` on.
		  f: The function to be executed.
		  buffer_size: Size of the buffer to be populated.
		  output_types: The output types generated by the function.
		  container: (Optional) string. Defaults to "".
		  shared_name: (Optional) string.
		  name: (Optional) string to name the op.
		
		Returns:
		  Handle to a FunctionBufferingResource.
	**/
	static public function function_buffering_resource(string_arg:Dynamic, target_device:Dynamic, f:Dynamic, buffer_size:Dynamic, output_types:Dynamic, ?container:Dynamic, ?shared_name:Dynamic, ?name:Dynamic):Dynamic;
	static public function function_buffering_resource_get_next(function_buffer_resource:Dynamic, output_types:Dynamic, ?name:Dynamic):Dynamic;
	static public function function_buffering_resource_reset(function_buffer_resource:Dynamic, ?name:Dynamic):Dynamic;
	/**
		A transformation that prefetches dataset values to the given `device`.
		
		NOTE: Although the transformation creates a `tf.data.Dataset`, the
		transformation must be the final `Dataset` in the input pipeline.
		
		Args:
		  device: A string. The name of a device to which elements will be prefetched.
		  buffer_size: (Optional.) The number of elements to buffer on `device`.
		    Defaults to an automatically chosen value.
		
		Returns:
		  A `Dataset` transformation function, which can be passed to
		  `tf.data.Dataset.apply`.
	**/
	static public function prefetch_to_device(device:Dynamic, ?buffer_size:Dynamic):Dynamic;
	static public var print_function : Dynamic;
	static public function tf_export(?args:python.VarArgs<Dynamic>, ?kwargs:python.KwArgs<Dynamic>):Dynamic;
}